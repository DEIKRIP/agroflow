{"version":3,"file":"notifications-module-btbgXZzY.js","sources":["../../src/features/financing/bolivar-digital/notifications-module.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport { supabase } from \"@/lib/supabase\";\nimport type { Notification as NotificationType, BolivarDigitalClient } from \"@/lib/types\";\nimport { Card, CardContent } from \"@/components/ui/Card\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Bell } from \"lucide-react\";\nimport Button from \"@/components/ui/Button\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { cn } from \"@/lib/utils\";\n\nconst notificationIcons = {\n    info: <Bell className=\"h-5 w-5 text-blue-500\" />,\n    warning: <Bell className=\"h-5 w-5 text-orange-500\" />,\n    success: <Bell className=\"h-5 w-5 text-green-500\" />,\n    action_required: <Bell className=\"h-5 w-5 text-indigo-500\" />,\n};\n\nconst notificationStyles = {\n    info: 'bg-blue-50 border-blue-200 dark:bg-blue-950 dark:border-blue-800',\n    warning: 'bg-orange-50 border-orange-200 dark:bg-orange-950 dark:border-orange-800',\n    success: 'bg-green-50 border-green-200 dark:bg-green-950 dark:border-green-800',\n    action_required: 'bg-indigo-50 border-indigo-200 dark:bg-indigo-950 dark:border-indigo-800',\n};\n\n\nconst NotificationCard = ({ notification, clientName, setActiveTab }: { notification: NotificationType, clientName: string, setActiveTab: (tab: string) => void }) => {\n    const { toast } = useToast();\n    const [isUpdating, setIsUpdating] = useState(false);\n\n    const handleMarkAsRead = async () => {\n        try {\n            setIsUpdating(true);\n            const { error } = await supabase\n              .from('notifications')\n              .update({ status: 'read', updatedAt: new Date().toISOString() })\n              .eq('id', notification.id);\n            if (error) throw error;\n            // Optimistic UI update: mutate local status\n            notification.status = 'read';\n        } catch (e: any) {\n            toast({ title: \"Error\", description: e?.message || 'No se pudo marcar como leída', variant: \"destructive\" });\n        } finally {\n            setIsUpdating(false);\n        }\n    };\n    \n    \n\n    return (\n        <Card className={cn(notification.status === 'unread' ? 'bg-background' : 'bg-muted/50 dark:bg-muted/20', notificationStyles[notification.type])}>\n            <CardContent className=\"p-4 flex items-start gap-4\">\n                <div className=\"pt-1\">\n                    {notificationIcons[notification.type]}\n                </div>\n                <div className=\"flex-grow\">\n                    <p className=\"text-sm text-foreground mb-1\">{notification.message}</p>\n                    <p className=\"text-xs text-muted-foreground\">\n                        Sujeto: <span className=\"font-medium text-foreground/80\">{clientName}</span> | {new Date(notification.createdAt).toLocaleString('es-VE')}\n                    </p>\n                </div>\n                {notification.status === 'unread' && (\n                     <Button variant=\"ghost\" size=\"sm\" onClick={handleMarkAsRead} disabled={isUpdating}>\n                        Marcar como leída\n                    </Button>\n                )}\n            </CardContent>\n        </Card>\n    )\n}\n\n\nexport default function NotificationsModule({ setActiveTab: _setActiveTab }: { setActiveTab: (tab: string) => void }) {\n    const [notifications, setNotifications] = useState<NotificationType[]>([]);\n    const [clients, setClients] = useState<Record<string, BolivarDigitalClient>>({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<Error | null>(null);\n    const { toast } = useToast();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                setLoading(true);\n                \n                // Fetch clients\n                const { data: clientsData, error: clientsError } = await supabase\n                    .from('bolivarDigitalClients')\n                    .select('*');\n\n                if (clientsError) throw clientsError;\n\n                const clientsMap = clientsData?.reduce((acc, client) => ({\n                    ...acc,\n                    [client.id]: client\n                }), {} as Record<string, BolivarDigitalClient>) || {};\n                \n                setClients(clientsMap);\n\n                // Fetch notifications\n                const { data: notificationsData, error: notificationsError } = await supabase\n                    .from('notifications')\n                    .select('*')\n                    .order('createdAt', { ascending: false });\n\n                if (notificationsError) throw notificationsError;\n\n                setNotifications(notificationsData || []);\n                \n            } catch (err) {\n                console.error('Error fetching data:', err);\n                setError(err instanceof Error ? err : new Error('Error al cargar las notificaciones'));\n                toast({\n                    title: 'Error',\n                    description: 'No se pudieron cargar las notificaciones',\n                    variant: 'destructive',\n                });\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, [toast]);\n\n    const unreadCount = useMemo(() => {\n        return notifications.filter(n => n.status === 'unread').length;\n    }, [notifications]);\n\n    return (\n        <div className=\"p-1 space-y-6\">\n            <div className=\"flex justify-between items-center\">\n                <h3 className=\"text-2xl font-semibold text-foreground\">Centro de Notificaciones</h3>\n                {unreadCount > 0 && (\n                  <span className=\"inline-flex items-center rounded px-2 py-1 text-xs font-medium bg-destructive/15 text-destructive border border-destructive/30\">\n                    {unreadCount} Sin Leer\n                  </span>\n                )}\n            </div>\n\n            {loading ? (\n                <div className=\"space-y-4\">\n                    {[...Array(3)].map((_, i) => <Skeleton key={i} className=\"h-20 w-full\" />)}\n                </div>\n            ) : error ? (\n                <p className=\"text-destructive\">Error: {error.message}</p>\n            ) : notifications.length === 0 ? (\n                <div className=\"text-center py-16 border-2 border-dashed rounded-lg\">\n                    <Bell className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                    <h3 className=\"mt-4 text-lg font-medium text-foreground\">Bandeja de entrada vacía</h3>\n                    <p className=\"mt-1 text-sm text-muted-foreground\">Las alertas y acciones requeridas aparecerán aquí.</p>\n                </div>\n            ) : (\n                <div className=\"space-y-3\">\n                    {notifications.map(notif => {\n                        const clientName = clients[notif.clientId]?.fullName || \"Sujeto no encontrado\";\n                        return (\n                            <NotificationCard \n                                key={notif.id} \n                                notification={notif} \n                                clientName={clientName} \n                                setActiveTab={setActiveTab}\n                            />\n                        );\n                    })}\n                </div>\n            )}\n        </div>\n    );\n}\n\n    "],"names":["notificationIcons","jsx","Bell","notificationStyles","NotificationCard","notification","clientName","setActiveTab","toast","useToast","isUpdating","setIsUpdating","useState","handleMarkAsRead","error","supabase","e","Card","cn","jsxs","CardContent","Button","NotificationsModule","_setActiveTab","notifications","setNotifications","clients","setClients","loading","setLoading","setError","useEffect","clientsData","clientsError","clientsMap","acc","client","notificationsData","notificationsError","err","unreadCount","useMemo","n","_","i","Skeleton","notif","_a"],"mappings":"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"}