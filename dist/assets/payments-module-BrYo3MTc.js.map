{"version":3,"file":"payments-module-BrYo3MTc.js","sources":["../../src/features/financing/bolivar-digital/payment-form-dialog.tsx","../../src/features/financing/bolivar-digital/payments-module.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useRef, useActionState, useState } from \"react\";\nimport { useFormStatus } from \"react-dom\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { addPaymentAction, type FormActionState } from \"@/lib/bolivarDigitalActions\";\nimport Button from \"@/components/ui/Button\";\nimport {\n  Dialog,\n  Content as DialogContent,\n  Description as DialogDescription,\n  Header as DialogHeader,\n  Title as DialogTitle,\n  Footer as DialogFooter,\n  Close as DialogClose,\n} from \"@/components/ui/Dialog\";\nimport Input from \"@/components/ui/Input\";\nimport { Label } from \"@/components/ui/Label\";\nimport Select from \"@/components/ui/Select\";\nimport type { Financiamiento } from \"@/lib/types\";\nimport { Textarea } from \"@/components/ui/Textarea\";\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return <Button type=\"submit\" disabled={pending}>{pending ? \"Registrando...\" : \"Registrar Pago\"}</Button>;\n}\n\ntype PaymentFormDialogProps = {\n  isOpen: boolean;\n  setIsOpen: (open: boolean) => void;\n  financiamiento: Financiamiento;\n  clientName: string;\n};\n\nexport default function PaymentFormDialog({ isOpen, setIsOpen, financiamiento, clientName }: PaymentFormDialogProps) {\n  const [state, formAction, isPending] = useActionState<FormActionState | null>(addPaymentAction, null);\n  const [metodo, setMetodo] = useState<string | undefined>(\"Efectivo\");\n  const { toast } = useToast();\n  const formRef = useRef<HTMLFormElement>(null);\n\n  const saldoPendiente = (financiamiento.monto || 0) - (financiamiento.totalPagado ?? 0);\n\n  useEffect(() => {\n    if (!isOpen) {\n      formRef.current?.reset();\n      setMetodo(\"Efectivo\");\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (isPending || !state) return;\n    if (state.success) {\n      toast({ title: \"Éxito\", description: state.message || \"Pago registrado\" });\n      setIsOpen(false);\n    } else {\n      toast({ title: \"Error\", description: state.message || \"No se pudo registrar el pago\", variant: \"destructive\" });\n    }\n  }, [state, isPending, toast, setIsOpen]);\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogContent className=\"sm:max-w-md\">\n        <DialogHeader>\n          <DialogTitle>Registrar Pago de Cosecha</DialogTitle>\n          <DialogDescription>\n            Registrar el ingreso de una venta de cosecha para <strong>{clientName}</strong>. El sistema aplicará la retención correspondiente al crédito.\n            <div className=\"flex justify-between text-sm mt-2 font-medium\">\n              <span>Monto del crédito: <span className=\"text-foreground\">Bs. {(financiamiento.monto || 0).toLocaleString(\"es-VE\", { minimumFractionDigits: 2 })}</span></span>\n              <span>Saldo Pendiente: <span className=\"text-primary\">Bs. {saldoPendiente.toLocaleString(\"es-VE\", { minimumFractionDigits: 2 })}</span></span>\n            </div>\n          </DialogDescription>\n        </DialogHeader>\n        <form ref={formRef} action={formAction} className=\"space-y-4\">\n          <input type=\"hidden\" name=\"clientId\" value={String(financiamiento.clientId || \"\")} />\n          <input type=\"hidden\" name=\"financiamientoId\" value={String(financiamiento.id || \"\")} />\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <Label htmlFor=\"fecha\">Fecha del Pago</Label>\n              <Input id=\"fecha\" name=\"fecha\" type=\"date\" required defaultValue={new Date().toISOString().split(\"T\")[0]} />\n              {state?.errors?.fecha && <p className=\"text-sm text-destructive mt-1\">{state.errors.fecha}</p>}\n            </div>\n            <div>\n              <Label htmlFor=\"monto\">Monto Total Venta (Bs.)</Label>\n              <Input id=\"monto\" name=\"monto\" type=\"number\" step=\"0.01\" required placeholder=\"Total de la venta\" />\n              {state?.errors?.monto && <p className=\"text-sm text-destructive mt-1\">{state.errors.monto}</p>}\n            </div>\n          </div>\n\n          <div>\n            <Label htmlFor=\"metodo\">Método de Pago</Label>\n            <Select\n              id=\"metodo\"\n              name=\"metodo\"\n              required\n              value={metodo}\n              onChange={(v: string | undefined) => setMetodo(v)}\n              placeholder=\"Seleccione un método...\"\n              options={[\n                { value: \"Efectivo\", label: \"Efectivo\" },\n                { value: \"Transferencia\", label: \"Transferencia\" },\n                { value: \"Patria\", label: \"Patria\" },\n                { value: \"Otro\", label: \"Otro\" },\n              ]}\n            />\n            {state?.errors?.metodo && <p className=\"text-sm text-destructive mt-1\">{state.errors.metodo}</p>}\n          </div>\n\n          <div>\n            <Label htmlFor=\"referenciaCosecha\">Referencia Cosecha (Opcional)</Label>\n            <Textarea id=\"referenciaCosecha\" name=\"referenciaCosecha\" placeholder=\"Ej: Cosecha de Maíz ciclo invierno 2024\" />\n            {state?.errors?.referenciaCosecha && (\n              <p className=\"text-sm text-destructive mt-1\">{state.errors.referenciaCosecha}</p>\n            )}\n          </div>\n\n          <DialogFooter>\n            <DialogClose asChild>\n              <Button type=\"button\" variant=\"secondary\">Cancelar</Button>\n            </DialogClose>\n            <SubmitButton />\n          </DialogFooter>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n}","\"use client\";\n\nimport { useState, useMemo, useEffect, useCallback } from \"react\";\nimport type React from \"react\";\nimport type { BolivarDigitalClient, Financiamiento } from \"@/lib/types\";\nimport { listActiveFinanciamientosWithClient, listPagosWithDetails, searchClientsWithActiveFinanciamientos } from \"@/lib/bolivarDigitalActions\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from \"@/components/ui/Card\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { DollarSign, User, Briefcase, Calendar, HandCoins, PiggyBank, Search, CreditCard, Loader2, TrendingUp } from \"lucide-react\";\nimport Input from \"@/components/ui/Input\";\nimport Button from \"@/components/ui/Button\";\nimport PaymentFormDialog from \"./payment-form-dialog\";\n\n// No Firebase cache needed; Supabase helpers already provide needed data\n\nconst FinanciamientoActivoCard = ({ financiamiento }: { financiamiento: Financiamiento & { clientName?: string } }) => {\n    const [isPaymentFormOpen, setIsPaymentFormOpen] = useState(false);\n    \n    return (\n        <>\n        <Card className=\"bg-muted/30\">\n            <CardHeader className=\"pb-2\">\n                 <CardTitle className=\"text-base flex items-center justify-between\">\n                    <span>{financiamiento.proposito}</span>\n                     <Button size=\"sm\" onClick={() => setIsPaymentFormOpen(true)}>\n                        <CreditCard className=\"mr-2 h-4 w-4\" />\n                        Pagar\n                    </Button>\n                </CardTitle>\n                <CardDescription>Sujeto: {financiamiento.clientName || 'Cargando...'}</CardDescription>\n            </CardHeader>\n            <CardContent className=\"text-sm\">\n                <div className=\"flex justify-between items-center\">\n                    <p>Monto: <span className=\"font-semibold\">Bs. {(financiamiento.monto || 0).toLocaleString('es-VE')}</span></p>\n                    <p>Pagado: <span className=\"font-semibold text-green-600\">Bs. {(financiamiento.totalPagado || 0).toLocaleString('es-VE')}</span></p>\n                    <span className=\"px-2 py-1 text-xs rounded border text-muted-foreground\">{financiamiento.estado}</span>\n                </div>\n            </CardContent>\n        </Card>\n        <PaymentFormDialog\n            isOpen={isPaymentFormOpen}\n            setIsOpen={setIsPaymentFormOpen}\n            financiamiento={financiamiento}\n            clientName={financiamiento.clientName || ''}\n        />\n        </>\n    )\n}\n\nconst SearchResultCard = ({ client }: { client: BolivarDigitalClient & { financiamientos: Financiamiento[] } }) => {\n    return (\n        <Card>\n            <CardHeader className=\"pb-4\">\n                <CardTitle className=\"text-lg flex items-center gap-2\">\n                    <User className=\"h-5 w-5 text-primary\"/>\n                    {client.fullName}\n                </CardTitle>\n                <CardDescription>Cédula: {client.cedula} | RIF: {client.rif}</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <h4 className=\"mb-2 font-medium text-sm text-muted-foreground\">Financiamientos Activos</h4>\n                <div className=\"space-y-2\">\n                    {client.financiamientos.length > 0 ? (\n                        client.financiamientos.map(f => <FinanciamientoActivoCard key={f.id} financiamiento={{ ...f, clientName: client.fullName }} />)\n                    ) : (\n                        <p className=\"text-sm text-center text-muted-foreground py-4 bg-muted/20 rounded-md\">No tiene financiamientos activos.</p>\n                    )}\n                </div>\n            </CardContent>\n        </Card>\n    );\n};\n\n\nexport default function PaymentsModule() {\n    const [pagosConDetalles, setPagosConDetalles] = useState<any[]>([]);\n    const [financiamientosActivos, setFinanciamientosActivos] = useState<(Financiamiento & { clientName?: string })[]>([]);\n\n    const [loadingFinanciamientos, setLoadingFinanciamientos] = useState(true);\n    const [isLoadingDetails, setIsLoadingDetails] = useState(true);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [isSearching, setIsSearching] = useState(false);\n    const [searchResults, setSearchResults] = useState<(BolivarDigitalClient & { financiamientos: Financiamiento[] })[]>([]);\n\n\n    // Load active financings from Supabase\n    useEffect(() => {\n        let cancelled = false;\n        (async () => {\n            setLoadingFinanciamientos(true);\n            try {\n                const data = await listActiveFinanciamientosWithClient();\n                if (!cancelled) setFinanciamientosActivos(data as any);\n            } catch (e) {\n                console.error('Error loading active financiamientos', e);\n            } finally {\n                if (!cancelled) setLoadingFinanciamientos(false);\n            }\n        })();\n        return () => { cancelled = true; };\n    }, []);\n\n    const handleSearch = useCallback(async () => {\n        if (!searchTerm.trim()) {\n            setSearchResults([]);\n            return;\n        }\n        setIsSearching(true);\n        setSearchResults([]);\n        try {\n            const results = await searchClientsWithActiveFinanciamientos(searchTerm);\n            setSearchResults(results as any);\n        } catch (error) {\n            console.error(\"Error searching clients:\", error);\n        } finally {\n            setIsSearching(false);\n        }\n    }, [searchTerm]);\n\n    // Load payments history with details from Supabase\n    useEffect(() => {\n        let cancelled = false;\n        (async () => {\n            setIsLoadingDetails(true);\n            try {\n                const pagos = await listPagosWithDetails();\n                if (!cancelled) setPagosConDetalles(pagos as any);\n            } catch (e) {\n                console.error('Error loading pagos', e);\n            } finally {\n                if (!cancelled) setIsLoadingDetails(false);\n            }\n        })();\n        return () => { cancelled = true; };\n    }, []);\n\n    const financialTotals = useMemo(() => {\n        return pagosConDetalles.reduce((acc, pago) => {\n            acc.totalIngresos += Number(pago.monto) || 0;\n            acc.totalRetenido += Number(pago.montoRetenido) || 0;\n            acc.totalGananciaProductores += Number(pago.gananciaAgricultor) || 0;\n            return acc;\n        }, { totalIngresos: 0, totalRetenido: 0, totalGananciaProductores: 0 });\n    }, [pagosConDetalles]);\n\n    const loadingTable = isLoadingDetails;\n\n    return (\n        <div className=\"h-full flex flex-col gap-8 p-1\">\n             <Card>\n                <CardHeader>\n                    <CardTitle>Financiamientos Activos</CardTitle>\n                    <CardDescription>Lista de todos los créditos que están actualmente en ciclo de pago. Registre un nuevo pago directamente desde aquí.</CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-3\">\n                    {loadingFinanciamientos && <div className=\"flex justify-center items-center p-8\"><Loader2 className=\"animate-spin h-8 w-8 text-primary\"/></div>}\n                    {!loadingFinanciamientos && financiamientosActivos.length > 0 && (\n                        financiamientosActivos.map(f => <FinanciamientoActivoCard key={f.id} financiamiento={f} />)\n                    )}\n                    {!loadingFinanciamientos && financiamientosActivos.length === 0 && (\n                        <p className=\"text-center text-sm text-muted-foreground py-4\">No hay financiamientos activos en este momento.</p>\n                    )}\n                </CardContent>\n            </Card>\n\n            <Card className=\"flex-grow flex flex-col\">\n                <CardHeader>\n                    <CardTitle className=\"text-2xl font-semibold text-foreground\">Historial y KPIs Financieros</CardTitle>\n                    <CardDescription>Registro centralizado de todos los abonos y análisis de la rentabilidad del modelo. También puede buscar un cliente para registrar un pago.</CardDescription>\n                     <div className=\"grid gap-4 md:grid-cols-3 pt-6\">\n                        <Card>\n                            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                                <CardTitle className=\"text-sm font-medium\">Ingresos Totales</CardTitle>\n                                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n                            </CardHeader>\n                            <CardContent>\n                                <div className=\"text-2xl font-bold\">Bs. {financialTotals.totalIngresos.toLocaleString('es-VE', { minimumFractionDigits: 2 })}</div>\n                            </CardContent>\n                        </Card>\n                        <Card>\n                            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                                <CardTitle className=\"text-sm font-medium\">Ganancia SiembraPaís (Retención)</CardTitle>\n                                <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n                            </CardHeader>\n                            <CardContent>\n                                <div className=\"text-2xl font-bold text-primary\">Bs. {financialTotals.totalRetenido.toLocaleString('es-VE', { minimumFractionDigits: 2 })}</div>\n                            </CardContent>\n                        </Card>\n                        <Card>\n                            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                                <CardTitle className=\"text-sm font-medium\">Ganancia Productores</CardTitle>\n                                <PiggyBank className=\"h-4 w-4 text-muted-foreground\" />\n                            </CardHeader>\n                            <CardContent>\n                                <div className=\"text-2xl font-bold text-green-600\">Bs. {financialTotals.totalGananciaProductores.toLocaleString('es-VE', { minimumFractionDigits: 2 })}</div>\n                            </CardContent>\n                        </Card>\n                    </div>\n                </CardHeader>\n                <CardContent className=\"flex-grow flex flex-col gap-4\">\n                     <div>\n                        <div className=\"relative flex-grow\">\n                             <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n                            <Input \n                                placeholder=\"Buscar cliente por nombre o cédula para registrar pago...\" \n                                className=\"pl-10\"\n                                value={searchTerm}\n                                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchTerm(e.target.value)}\n                                onKeyDown={(e: React.KeyboardEvent<HTMLInputElement>) => e.key === 'Enter' && handleSearch()}\n                            />\n                        </div>\n                         {isSearching && <div className=\"flex justify-center items-center p-4\"><Loader2 className=\"animate-spin h-6 w-6 text-primary\"/></div>}\n                         {!isSearching && searchResults.length > 0 && (\n                            <div className=\"space-y-4 mt-4 border-t pt-4\">\n                                {searchResults.map(client => <SearchResultCard key={client.id} client={client}/>)}\n                            </div>\n                        )}\n                    </div>\n\n                    <div className=\"flex-grow overflow-auto\">\n                        {loadingTable && <div className=\"space-y-2\">{[...Array(5)].map((_, i) => <Skeleton key={i} className=\"h-12 w-full\" />)}</div>}\n                        {!loadingTable && pagosConDetalles.length === 0 && (\n                            <div className=\"text-center py-16 border-2 border-dashed rounded-lg h-full flex flex-col justify-center\">\n                                <DollarSign className=\"mx-auto h-12 w-12 text-muted-foreground\" />\n                                <h3 className=\"mt-4 text-lg font-medium text-foreground\">No se han registrado pagos</h3>\n                                <p className=\"mt-1 text-sm text-muted-foreground\">El historial de pagos aparecerá aquí.</p>\n                            </div>\n                        )}\n                        {!loadingTable && pagosConDetalles.length > 0 && (\n                            <div className=\"overflow-x-auto\">\n                                <table className=\"w-full text-sm\">\n                                    <thead className=\"sticky top-0 bg-muted\">\n                                        <tr>\n                                            <th className=\"text-left py-2\"><User className=\"inline mr-1\" />Sujeto</th>\n                                            <th className=\"text-left py-2\"><Calendar className=\"inline mr-1\" />Fecha</th>\n                                            <th className=\"text-right py-2\"><DollarSign className=\"inline mr-1\" />Monto Total</th>\n                                            <th className=\"text-right py-2\"><TrendingUp className=\"inline mr-1\" />Monto Retenido</th>\n                                            <th className=\"text-right py-2\"><PiggyBank className=\"inline mr-1\" />Ganancia Productor</th>\n                                            <th className=\"text-left py-2\">Método</th>\n                                            <th className=\"text-left py-2\"><Briefcase className=\"inline mr-1\" />Crédito Asociado</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {pagosConDetalles.map(pago => (\n                                            <tr key={pago.id} className=\"border-t\">\n                                                <td className=\"py-2 font-medium\">{pago.clientName}</td>\n                                                <td className=\"py-2\">{new Date(pago.fecha).toLocaleDateString()}</td>\n                                                <td className=\"py-2 text-right font-semibold text-foreground\">Bs. {Number(pago.monto || 0).toLocaleString('es-VE', { minimumFractionDigits: 2 })}</td>\n                                                <td className=\"py-2 text-right text-primary font-medium\">Bs. {Number(pago.montoRetenido || 0).toLocaleString('es-VE', { minimumFractionDigits: 2 })}</td>\n                                                <td className=\"py-2 text-right text-green-600 font-medium\">Bs. {Number(pago.gananciaAgricultor || 0).toLocaleString('es-VE', { minimumFractionDigits: 2 })}</td>\n                                                <td className=\"py-2\"><span className=\"inline-block px-2 py-1 rounded bg-muted capitalize\">{pago.metodo}</span></td>\n                                                <td className=\"py-2 text-muted-foreground text-xs\">{pago.proposito}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        )}\n                    </div>\n                </CardContent>\n            </Card>\n        </div>\n    );\n}\n"],"names":["SubmitButton","pending","useFormStatus","jsx","Button","PaymentFormDialog","isOpen","setIsOpen","financiamiento","clientName","state","formAction","isPending","useActionState","addPaymentAction","metodo","setMetodo","useState","toast","useToast","formRef","useRef","saldoPendiente","useEffect","_a","Dialog","jsxs","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","Input","_b","Select","v","_c","Textarea","_d","DialogFooter","DialogClose","FinanciamientoActivoCard","isPaymentFormOpen","setIsPaymentFormOpen","Fragment","Card","CardHeader","CardTitle","CreditCard","CardDescription","CardContent","SearchResultCard","client","User","f","PaymentsModule","pagosConDetalles","setPagosConDetalles","financiamientosActivos","setFinanciamientosActivos","loadingFinanciamientos","setLoadingFinanciamientos","isLoadingDetails","setIsLoadingDetails","searchTerm","setSearchTerm","isSearching","setIsSearching","searchResults","setSearchResults","cancelled","data","listActiveFinanciamientosWithClient","e","handleSearch","useCallback","results","searchClientsWithActiveFinanciamientos","error","pagos","listPagosWithDetails","financialTotals","useMemo","acc","pago","loadingTable","Loader2","DollarSign","TrendingUp","PiggyBank","Search","_","i","Skeleton","Calendar","Briefcase"],"mappings":"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"}